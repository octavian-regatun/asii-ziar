import Head from "next/head";
import { useEffect, useState } from "react";
import Button from "../components/Button";
import BigArticle from "../components/BigArticle";
import CarouselHeader from "../components/CarouselHeader";
import InfoCard from "../components/InfoCard";
import MediumArticle from "../components/MediumArticle";
import NavBar from "../components/NavBar";
import SmallArticle from "../components/SmallArticle";
import articles from "../data/articles.json";
import carouselData from "../data/carousel.json";
import infoCardData from "../data/infoCard.json";
import { fetchImages } from "../utils/fetchImages";

export default function Home() {
  const [images, setImages] = useState([]);

  useEffect(() => {
    (async () => {
      const imageData = await fetchImages();
      setImages(imageData);
    })();
  }, []);

  return (
    <>
      <Head>
        <title>ZIARUL DE ASII</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <NavBar />

      <CarouselHeader data={carouselData} />

      <main className="grid grid-cols-12 mx-16 gap-y-12 my-8">
        <div className="col-span-12 grid gap-16 text-center grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
          {infoCardData.map((data) => (
            <InfoCard
              key={`infoCard-${data.id}`}
              title={data.title}
              description={data.description}
            />
          ))}
        </div>
        <div className="col-span-12 lg:col-span-8 flex flex-col lg:flex-row gap-8 md:mr-8">
          {articles.map(
            (article, index) =>
              index < 2 &&
              images[index]?.download_url && (
                <BigArticle
                  key={`bigArticle-${article.title}-${index}`}
                  title={article.title}
                  description={article.description}
                  articleHref={article.articleHref}
                  imageSrc={images[index]?.download_url}
                />
              )
          )}
        </div>
        <div className="col-span-12 lg:col-span-4 flex flex-col gap-12">
          {articles.map(
            (article, index) =>
              index < 3 &&
              images[index]?.download_url && (
                <SmallArticle
                  key={`smallArticle-${article.title}-${index}`}
                  title={article.title}
                  description={article.description}
                  articleHref={article.articleHref}
                />
              )
          )}
        </div>
        <div className="col-span-12 gap-6 flex flex-row flex-wrap justify-between items-center">
          <h5 className="font-bold text-4xl text-indigo-900">
            The science behind Smart UV
          </h5>

        <Button
         buttonHref={"#"}
         label = "See all articles"
         variant = "outlined"
        />
        </div>
        <div className="col-span-12 grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
          {articles
            .slice(4)
            .map(
              (article, index) =>
                images[index]?.download_url && (
                  <MediumArticle
                    key={`mediumArticle-firstRow-${article.title}-${index}`}
                    title={article.title}
                    description={article.description}
                    articleHref={article.articleHref}
                    imageSrc={images[index]?.download_url}
                  />
                )
            )}
        </div>
        {/* Inca o sectiune cu articole */}
        <div className="col-span-12 gap-6 flex flex-row flex-wrap justify-between items-center">
          <h5 className="font-bold text-4xl text-indigo-900">
            Smart UV case studies
          </h5>

        <Button
         buttonHref={"#"}
         label = "See all articles"
         variant = "outlined"
        />
        </div>
        <div className="col-span-12 grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-4">
          {articles
            .slice(4)
            .map(
              (article, index) =>
                images[index]?.download_url && (
                  <MediumArticle
                    key={`mediumArticle-secondRow-${article.title}-${index}`}
                    title={article.title}
                    description={article.description}
                    articleHref={article.articleHref}
                    imageSrc={images[index]?.download_url}
                  />
                )
            )}
        </div>
      </main>
    </>
  );
}
